<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<!-- Scans the classpath of this application for @Components to deploy as beans -->
	<context:component-scan base-package="com.jrdevel.aboutus" />

	<!-- Configures the @Controller programming model -->
	<mvc:annotation-driven conversion-service="applicationConversionService">
		<mvc:message-converters>
	        <!-- Use the HibernateAware mapper instead of the default -->
	        <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	            <property name="objectMapper">
	                <bean class="com.jrdevel.aboutus.util.HibernateAwareObjectMapper" />
	            </property>
	        </bean>
	    </mvc:message-converters>
	</mvc:annotation-driven>
	
	<bean class="com.jrdevel.aboutus.util.AboutUsJsonConverter" id="applicationConversionService"/>
	
	<!-- misc -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- Configures Hibernate - Database Config -->
	<import resource="db-config.xml" />
	
	<bean id="userSession" class="com.jrdevel.aboutus.model.User" scope="globalSession">
      <!-- this next element effects the proxying of the surrounding bean -->
      <aop:scoped-proxy/>
    </bean>

</beans>